-- Challengers Katarina

assert(load(Base64Decode(
"aWYgbXlIZXJvLmNoYXJOYW1lIH49ICJLYXRhcmluYSIgdGhlbiByZXR1cm4gZW5kDQoNCi0tIEluZm8NCmxvY2FsIHZlcnNpb24gPSAxLjANCg0KLS0gVWx0IEhlbHBlcg0KbG9jYWwgYW5pbWF0aW9uUiA9ICIiDQpsb2NhbCB1c2luZ1IgPSBmYWxzZQ0KbG9jYWwgdGltZVIgPSAwDQoNCi0tIFJhbmdlcw0KbG9jYWwgd1JhbmdlID0gMzc1DQpsb2NhbCBlUmFuZ2UgPSA3MDANCmxvY2FsIHFSYW5nZSA9IDY3NQ0KbG9jYWwgclJhbmdlID0gNTUwDQoNCi0tIElnbml0ZQ0KbG9jYWwgaWduaXRlID0gbmlsDQpsb2NhbCBpZ25pdGVETUcgPSAwDQoNCi0tIENoZWNrcw0KbG9jYWwgUVJFQURZID0gZmFsc2UNCmxvY2FsIFdSRUFEWSA9IGZhbHNlDQpsb2NhbCBFUkVBRFkgPSBmYWxzZQ0KbG9jYWwgUlJFQURZID0gZmFsc2UNCmxvY2FsIElSRUFEWSA9IGZhbHNlDQoNCmZ1bmN0aW9uIE9uTG9hZCgpDQoJTWVudSA9IHNjcmlwdENvbmZpZygiQ2hhbGxlbmdlcnMgS2F0YXJpbmEiLCAiS2F0YXJpbmEiKQ0KDQoJTWVudTphZGRTdWJNZW51KCJbIi4ubXlIZXJvLmNoYXJOYW1lLi4iXSAtIEtleSBTZXR0aW5ncyIsICJLZXlzIikNCglNZW51LktleXM6YWRkUGFyYW0oImNvbWJvS2V5IiwgIkNvbWJvIGtleSIsIFNDUklQVF9QQVJBTV9PTktFWURPV04sIGZhbHNlLCAzMikNCglNZW51LktleXM6YWRkUGFyYW0oImhhcmFzc0tleSIsICJIYXJhc3MgS2V5IiwgU0NSSVBUX1BBUkFNX09OS0VZRE9XTiwgZmFsc2UsIHN0cmluZy5ieXRlKCJNIikpDQoJTWVudS5LZXlzOmFkZFBhcmFtKCJmYXJtS2V5IiwgIkZhcm0gT24vT2ZmIiwgU0NSSVBUX1BBUkFNX09OS0VZVE9HR0xFLCBmYWxzZSwgc3RyaW5nLmJ5dGUoIk4iKSkNCg0KCU1lbnU6YWRkU3ViTWVudSgiWyIuLm15SGVyby5jaGFyTmFtZS4uIl0gLSBIYXJhc3MgU2V0dGluZ3MiLCAiSGFyYXMiKQ0KCU1lbnUuSGFyYXM6YWRkUGFyYW0oInVzZVFIYXJhc3MiLCAiVXNlIChRKSIsIFNDUklQVF9QQVJBTV9PTk9GRiwgdHJ1ZSkNCglNZW51LkhhcmFzOmFkZFBhcmFtKCJ1c2VXSGFyYXNzIiwgIlVzZSAoVykiLCBTQ1JJUFRfUEFSQU1fT05PRkYsIHRydWUpIA0KCU1lbnUuSGFyYXM6YWRkUGFyYW0oInVzZUVIYXJhc3MiLCAiVXNlIChFKSIsIFNDUklQVF9QQVJBTV9PTk9GRiwgdHJ1ZSkNCg0KCU1lbnU6YWRkU3ViTWVudSgiWyIuLm15SGVyby5jaGFyTmFtZS4uIl0gLSBDb21ibyBTZXR0aW5ncyIsICJDb21ibyIpDQoJTWVudS5Db21ibzphZGRQYXJhbSgidXNlUSIsICJVc2UgKFEpIiwgU0NSSVBUX1BBUkFNX09OT0ZGLCB0cnVlKQ0KCU1lbnUuQ29tYm86YWRkUGFyYW0oInVzZVciLCAiVXNlIChXKSIsIFNDUklQVF9QQVJBTV9PTk9GRiwgdHJ1ZSkgDQoJTWVudS5Db21ibzphZGRQYXJhbSgidXNlRSIsICJVc2UgKEUpIiwgU0NSSVBUX1BBUkFNX09OT0ZGLCB0cnVlKQ0KCU1lbnUuQ29tYm86YWRkUGFyYW0oInNwYWNlciIsICItLS0tLS0tLS0tIiwgU0NSSVBUX1BBUkFNX09OT0ZGLCBmYWxzZSkNCglNZW51LkNvbWJvOmFkZFN1Yk1lbnUoIlsiLi5teUhlcm8uY2hhck5hbWUuLiJdIC0gVWx0aW1hdGUgU2V0dGluZ3MiLCAidWx0aW1hdGUiKSANCglNZW51LkNvbWJvLnVsdGltYXRlOmFkZFBhcmFtKCJ1c2VSIiwgIlVzZSAoUikiLCBTQ1JJUFRfUEFSQU1fT05PRkYsIHRydWUpDQoJTWVudS5Db21iby51bHRpbWF0ZTphZGRQYXJhbSgidWx0TW9kZSIsICJVbHRpbWF0ZSBNb2RlIiwgU0NSSVBUX1BBUkFNX0xJU1QsIDIsIHsiUUVXUiIsICJFUVdSIn0pDQoNCglNZW51OmFkZFN1Yk1lbnUoIlsiLi5teUhlcm8uY2hhck5hbWUuLiJdIC0gS1MgU2V0dGluZ3MiLCAiS1MiKQ0KCU1lbnUuS1M6YWRkUGFyYW0oImtzV2l0aFEiLCAiS1Mgd2l0aCBRIiwgU0NSSVBUX1BBUkFNX09OT0ZGLCB0cnVlKQ0KCU1lbnUuS1M6YWRkUGFyYW0oImtzV2l0aFciLCAiS1Mgd2l0aCBXIiwgU0NSSVBUX1BBUkFNX09OT0ZGLCB0cnVlKQ0KCU1lbnUuS1M6YWRkUGFyYW0oImtzV2l0aEUiLCAiS1Mgd2l0aCBFIiwgU0NSSVBUX1BBUkFNX09OT0ZGLCB0cnVlKQ0KCU1lbnUuS1M6YWRkUGFyYW0oImtzV2l0aElnbml0ZSIsICJLUyB3aXRoIGlnbml0ZSIsIFNDUklQVF9QQVJBTV9PTk9GRiwgdHJ1ZSkNCg0KCU1lbnU6YWRkU3ViTWVudSgiWyIuLm15SGVyby5jaGFyTmFtZS4uIl0gLSBGYXJtIFNldHRpbmdzIiwgIkZhcm0iKQ0KCU1lbnUuRmFybTphZGRQYXJhbSgidXNlUUZhcm0iLCAiVXNlIFEiLCBTQ1JJUFRfUEFSQU1fT05PRkYsIHRydWUpDQoJTWVudS5GYXJtOmFkZFBhcmFtKCJ1c2VXRmFybSIsICJVc2UgVyIsIFNDUklQVF9QQVJBTV9PTk9GRiwgdHJ1ZSkNCg0KCXRzID0gVGFyZ2V0U2VsZWN0b3IoVEFSR0VUX0xPV19IUF9QUklPUklUWSwgZVJhbmdlKQ0KCXRzLm5hbWUgPSAiS2F0YXJpbmEiDQoJTWVudTphZGRUUyh0cykNCgllbmVteU1pbmlvbnMgPSBtaW5pb25NYW5hZ2VyKE1JTklPTl9FTkVNWSwgcVJhbmdlLCBteUhlcm8sIE1JTklPTl9TT1JUX01BWEhFQUxUSF9ERUMpDQoNCglpZiBteUhlcm86R2V0U3BlbGxEYXRhKFNVTU1PTkVSXzEpLm5hbWU6ZmluZCgic3VtbW9uZXJkb3QiKSB0aGVuDQoJCWlnbml0ZSA9IFNVTU1PTkVSXzEgDQoJZWxzZWlmIG15SGVybzpHZXRTcGVsbERhdGEoU1VNTU9ORVJfMikubmFtZTpmaW5kKCJzdW1tb25lcmRvdCIpIHRoZW4NCgkJaWduaXRlID0gU1VNTU9ORVJfMiANCgllbmQNCg0KCXByaW50KCJDaGFsbGVuZ2VycyBLYXRhcmluYSB2ZXJzaW9uOiAiLi4gdmVyc2lvbiAuLiAiIGxvYWRlZCEiKQ0KZW5kDQoNCmZ1bmN0aW9uIE9uVGljaygpDQoJQ2hlY2tzKCkNCglJZ25pdGVLUygpDQoNCglpZiBNZW51LktleXMuY29tYm9LZXkgdGhlbg0KCQlDb21ibygpDQoJZW5kDQoNCglpZiBNZW51LktleXMuaGFyYXNzS2V5IHRoZW4NCgkJSGFyYXNzKCkNCgllbmQNCg0KCWlmIE1lbnUuS2V5cy5mYXJtS2V5IHRoZW4NCgkJRmFybSgpDQoJZW5kDQplbmQNCg0KZnVuY3Rpb24gQ2hlY2tzKCkNCgl0czp1cGRhdGUoKQ0KCXRhcmdldCA9IHRzLnRhcmdldA0KDQoJdXNpbmdSID0gR2V0VGlja0NvdW50KCkgPD0gdGltZVIgKyBHZXRMYXRlbmN5KCkgKyA1MCBvciBhbmltYXRpb25SID09ICJTcGVsbDQiDQoNCglRUkVBRFkgPSAobXlIZXJvOkNhblVzZVNwZWxsKF9RKSA9PSBSRUFEWSkNCglXUkVBRFkgPSAobXlIZXJvOkNhblVzZVNwZWxsKF9XKSA9PSBSRUFEWSkgDQoJRVJFQURZID0gKG15SGVybzpDYW5Vc2VTcGVsbChfRSkgPT0gUkVBRFkpDQoJUlJFQURZID0gKG15SGVybzpDYW5Vc2VTcGVsbChfUikgPT0gUkVBRFkpDQoJSVJFQURZID0gKGlnbml0ZSB+PSBuaWwgYW5kIG15SGVybzpDYW5Vc2VTcGVsbChpZ25pdGUpID09IFJFQURZKSANCmVuZA0KDQpmdW5jdGlvbiBDb21ibygpDQoJaWYgVmFsaWRUYXJnZXQodGFyZ2V0KSB0aGVuDQoJCS0tIFVsdCBiYXNlZCBvbiB1bHRNb2RlDQoJCWlmIE1lbnUuQ29tYm8udWx0aW1hdGUudWx0TW9kZSA9PSAxIHRoZW4NCgkJCWlmIFFSRUFEWSBhbmQgTWVudS5Db21iby51c2VRIHRoZW4gDQoJCQkJaWYgR2V0RGlzdGFuY2UodGFyZ2V0KSA8PSBxUmFuZ2UgdGhlbg0KCQkJCQlDYXN0U3BlbGwoX1EsIHRhcmdldCkgDQoJCQkJZW5kDQoJCQllbmQNCg0KCQkJaWYgRVJFQURZIGFuZCBNZW51LkNvbWJvLnVzZUUgdGhlbg0KCQkJCWlmIEdldERpc3RhbmNlKHRhcmdldCkgPD0gZVJhbmdlIHRoZW4NCgkJCQkJQ2FzdFNwZWxsKF9FLCB0YXJnZXQpDQoJCQkJZW5kDQoJCQllbmQNCg0KDQoJCQlpZiBXUkVBRFkgYW5kIE1lbnUuQ29tYm8udXNlVyB0aGVuDQoJCQkJaWYgR2V0RGlzdGFuY2UodGFyZ2V0KSA8PSB3UmFuZ2UgdGhlbg0KCQkJCQlDYXN0U3BlbGwoX1cpDQoJCQkJZW5kDQoJCQllbmQNCg0KCQkJaWYgUlJFQURZIGFuZCBub3QgUVJFQURZIGFuZCBub3QgV1JFQURZIGFuZCBub3QgRVJFQURZIGFuZCBNZW51LkNvbWJvLnVsdGltYXRlLnVzZVIgdGhlbg0KCQkJCWlmIEdldERpc3RhbmNlKHRhcmdldCkgPD0gclJhbmdlIHRoZW4NCgkJCQkJdGltZVIgPSBHZXRUaWNrQ291bnQoKQ0KCQkJCQlDYXN0U3BlbGwoX1IpDQoJCQkJZW5kDQoJCQllbmQNCgkJZWxzZWlmIE1lbnUuQ29tYm8udWx0aW1hdGUudWx0TW9kZSA9PSAyIHRoZW4NCgkJCWlmIEVSRUFEWSBhbmQgTWVudS5Db21iby51c2VFIHRoZW4NCgkJCQlpZiBHZXREaXN0YW5jZSh0YXJnZXQpIDw9IGVSYW5nZSB0aGVuDQoJCQkJCUNhc3RTcGVsbChfRSwgdGFyZ2V0KQ0KCQkJCWVuZA0KCQkJZW5kDQoNCgkJCWlmIFFSRUFEWSBhbmQgTWVudS5Db21iby51c2VRIHRoZW4gDQoJCQkJaWYgR2V0RGlzdGFuY2UodGFyZ2V0KSA8PSBxUmFuZ2UgdGhlbg0KCQkJCQlDYXN0U3BlbGwoX1EsIHRhcmdldCkgDQoJCQkJZW5kDQoJCQllbmQNCg0KCQkJaWYgV1JFQURZIGFuZCBNZW51LkNvbWJvLnVzZVcgdGhlbg0KCQkJCWlmIEdldERpc3RhbmNlKHRhcmdldCkgPD0gd1JhbmdlIHRoZW4NCgkJCQkJQ2FzdFNwZWxsKF9XKQ0KCQkJCWVuZA0KCQkJZW5kDQoNCgkJCWlmIFJSRUFEWSBhbmQgbm90IFFSRUFEWSBhbmQgbm90IFdSRUFEWSBhbmQgbm90IEVSRUFEWSBhbmQgTWVudS5Db21iby51bHRpbWF0ZS51c2VSIHRoZW4NCgkJCQlpZiBHZXREaXN0YW5jZSh0YXJnZXQpIDw9IHJSYW5nZSB0aGVuDQoJCQkJCXRpbWVSID0gR2V0VGlja0NvdW50KCkNCgkJCQkJQ2FzdFNwZWxsKF9SKQ0KCQkJCWVuZA0KCQkJZW5kDQoJCWVuZA0KCWVuZA0KZW5kDQoNCg0KZnVuY3Rpb24gQXV0b0lnbml0ZShlbmVteSkNCglpZ25pdGVETUcgPSAoKElSRUFEWSBhbmQgZ2V0RG1nKCJJR05JVEUiLCBlbmVteSwgbXlIZXJvKSkgb3IgMCkNCglpZiBlbmVteS5oZWFsdGggPD0gaWduaXRlRE1HIGFuZCBHZXREaXN0YW5jZShlbmVteSkgPD0gNjAwIGFuZCBpZ25pdGUgfj0gbmlsIHRoZW4NCgkJaWYgSVJFQURZIHRoZW4NCgkJCUNhc3RTcGVsbChpZ25pdGUsIGVuZW15KQ0KCQllbmQgDQoJZW5kDQplbmQNCg0KZnVuY3Rpb24gSWduaXRlS1MoKQ0KCWlmIFZhbGlkVGFyZ2V0KHRhcmdldCkgdGhlbg0KCQlpZiBNZW51LktTLmtzV2l0aElnbml0ZSB0aGVuDQoJCQlBdXRvSWduaXRlKHRhcmdldCkNCgkJZW5kDQoJZW5kDQplbmQNCg0KZnVuY3Rpb24gS2lsbFN0ZWFsKCkNCglmb3IgaSwgZW5lbXkgaW4gaXBhaXJzKGUpIGRvDQoJCWlmIFZhbGlkVGFyZ2V0KGVuZW15KSBhbmQgR2V0RGlzdGFuY2UoZW5lbXkpIDwgNzAwIHRoZW4NCgkJCWlmIE1lbnUuS1Mua3NXaXRoUSB0aGVuDQoJCQkJaWYgUVJlYWR5IGFuZCBnZXREbWcoIlEiLCBlbmVteSwgbXlIZXJvKSA+IGVuZW15LmhlYWx0aCB0aGVuDQoJCQkJCUNhc3RTcGVsbChfUSwgZW5lbXkpDQoJCQkJZW5kDQoJCQllbmQNCg0KCQkJaWYgTWVudS5LUy5rc1dpdGhXIHRoZW4NCgkJCQlpZiBXUmVhZHkgYW5kIGdldERtZygiVyIsIGVuZW15LCBteUhlcm8pID4gZW5lbXkuaGVhbHRoIHRoZW4NCgkJCQkJQ2FzdFNwZWxsKF9XKQ0KCQkJCWVuZA0KCQkJZW5kDQoJCQkNCgkJCWlmIE1lbnUuS1Mua3NXaXRoRSB0aGVuDQoJCQkJaWYgRVJlYWR5IGFuZCBnZXREbWcoIkUiLCBlbmVteSwgbXlIZXJvKSA+IGVuZW15LmhlYWx0aCB0aGVuDQoJCQkJCUNhc3RTcGVsbChfRSwgZW5lbXkpDQoJCQkJZW5kDQoJCQllbmQNCgkJZW5kDQoJZW5kDQplbmQNCg0KDQpmdW5jdGlvbiBPbkFuaW1hdGlvbih1bml0LCBhbmltYXRpb25OYW1lKQ0KCWlmIHVuaXQuaXNNZSBhbmQgYW5pbWF0aW9uUiB+PSBhbmltYXRpb25OYW1lIHRoZW4NCgkJYW5pbWF0aW9uUiA9IGFuaW1hdGlvbk5hbWUNCgllbmQNCmVuZA0KDQpmdW5jdGlvbiBIYXJhc3MoKQ0KCWlmIG5vdCB0YXJnZXQgdGhlbg0KCQlyZXR1cm4NCgllbmQNCg0KCWlmIFZhbGlkVGFyZ2V0KHRhcmdldCkgdGhlbg0KCQlpZiBFUkVBRFkgYW5kIE1lbnUuSGFyYXMudXNlRUhhcmFzcyB0aGVuDQoJCQlpZiBHZXREaXN0YW5jZSh0YXJnZXQpIDw9IGVSYW5nZSB0aGVuDQoJCQkJQ2FzdFNwZWxsKF9FLCB0YXJnZXQpDQoJCQllbmQNCgkJZW5kDQoNCgkJaWYgUVJFQURZIGFuZCBNZW51LkhhcmFzLnVzZVFIYXJhc3MgdGhlbiANCgkJCWlmIEdldERpc3RhbmNlKHRhcmdldCkgPD0gcVJhbmdlIHRoZW4NCgkJCQlDYXN0U3BlbGwoX1EsIHRhcmdldCkgDQoJCQllbmQNCgkJZW5kDQoNCgkJaWYgV1JFQURZIGFuZCBNZW51LkhhcmFzLnVzZVdIYXJhc3MgdGhlbg0KCQkJaWYgR2V0RGlzdGFuY2UodGFyZ2V0KSA8PSB3UmFuZ2UgdGhlbg0KCQkJCUNhc3RTcGVsbChfVykNCgkJCWVuZA0KCQllbmQNCgllbmQNCmVuZA0KDQpmdW5jdGlvbiBGYXJtKCkNCgllbmVteU1pbmlvbnM6dXBkYXRlKCkNCglmb3IgaSwgbWluaW9uIGluIGlwYWlycyhlbmVteU1pbmlvbnMub2JqZWN0cykgZG8NCgkJaWYgTWVudS5GYXJtLnVzZVFGYXJtIHRoZW4NCgkJCWlmIFZhbGlkVGFyZ2V0KG1pbmlvbikgYW5kIEdldERpc3RhbmNlKG1pbmlvbikgPD0gcVJhbmdlIGFuZCBRUkVBRFkgYW5kIGdldERtZygiUSIsIG1pbmlvbiwgbXlIZXJvKSA+IG1pbmlvbi5oZWFsdGggdGhlbg0KCQkJCUNhc3RTcGVsbChfUSwgbWluaW9uKQ0KCQkJZW5kDQoJCWVuZA0KCWVuZA0KCQ0KCWZvciBpLCBtaW5pb24gaW4gaXBhaXJzKGVuZW15TWluaW9ucy5vYmplY3RzKSBkbw0KCQlpZiBNZW51LkZhcm0udXNlV0Zhcm0gdGhlbg0KCQkJaWYgVmFsaWRUYXJnZXQobWluaW9uKSBhbmQgR2V0RGlzdGFuY2UobWluaW9uKSA8PSB3UmFuZ2UgYW5kIFdSRUFEWSBhbmQgZ2V0RG1nKCJXIiwgbWluaW9uLCBteUhlcm8pID4gbWluaW9uLmhlYWx0aCB0aGVuDQoJCQkJQ2FzdFNwZWxsKF9XKQ0KCQkJZW5kDQoJCWVuZA0KCWVuZA0KZW5k"), nil, "bt", _ENV))()